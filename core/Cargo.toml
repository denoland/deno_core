# Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.

[package]
name = "deno_core"
version = "0.266.0"
authors.workspace = true
edition.workspace = true
license.workspace = true
readme = "README.md"
repository.workspace = true
description = "A modern JavaScript/TypeScript runtime built with V8, Rust, and Tokio"

[[bin]]
name = "dcore"
path = "main.rs"
required-features = ["dcore"]

[lib]
path = "lib.rs"

[features]
default = ["include_icu_data", "v8_use_custom_libcxx", "snapshot_data_json"]
snapshot_data_json = []
snapshot_data_bincode = ["bincode"]
include_icu_data = ["deno_core_icudata"]
v8_use_custom_libcxx = ["v8/use_custom_libcxx"]
include_js_files_for_snapshotting = []
unsafe_runtime_options = []
unsafe_use_unprotected_platform = []
dcore = ["fastwebsockets", "http", "http-body-util", "hyper", "hyper-util", "uuid"]

[dependencies]
anyhow.workspace = true
bincode = { workspace = true, optional = true }
bit-set.workspace = true
bit-vec.workspace = true
bytes.workspace = true
cooked-waker.workspace = true
deno_core_icudata = { workspace = true, optional = true }
deno_ops.workspace = true
deno_unsync.workspace = true
futures.workspace = true
libc.workspace = true
log.workspace = true
memoffset.workspace = true
parking_lot.workspace = true
pin-project.workspace = true
serde.workspace = true
serde_json = { workspace = true, features = ["preserve_order"] }
serde_v8.workspace = true
smallvec.workspace = true
sourcemap.workspace = true
static_assertions.workspace = true
tokio.workspace = true
url.workspace = true
v8.workspace = true

# TODO(mmastrac): make these optional, they should be used only if we're compiling
# 'dcore' bin target; try to trim enabled features.
fastwebsockets = { version = "0.6", features = ["upgrade", "unstable-split"], optional = true }
http = { version = "1.0", optional = true }
http-body-util = { version = "0.1", optional = true }
hyper = { version = "=1.1.0", features = ["full"], optional = true }
hyper-util = { version = "=0.1.2", features = ["tokio", "server", "server-auto"], optional = true }
uuid = { version = "1.3.0", features = ["v4"], optional = true }

[dev-dependencies]
bencher.workspace = true
criterion.workspace = true
deno_ast.workspace = true
fastrand.workspace = true
pretty_assertions.workspace = true
rstest.workspace = true
unicycle = "0"

[[bench]]
name = "ops_sync"
path = "benches/ops/sync.rs"
harness = false
required-features = ["unsafe_runtime_options"]

[[bench]]
name = "ops_async"
path = "benches/ops/async.rs"
harness = false
required-features = ["unsafe_runtime_options"]

[[bench]]
name = "opset"
path = "benches/ops/opset.rs"
harness = false

[[bench]]
name = "arena"
path = "benches/infra/arena.rs"
harness = false

[[bench]]
name = "snapshot"
path = "benches/snapshot/snapshot.rs"
harness = false
