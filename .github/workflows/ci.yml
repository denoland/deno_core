name: ci

on: [push, pull_request]

jobs:
  rust:
    name: deno_core-${{ matrix.os }}
    if: |
      (github.event_name == 'push' || !startsWith(github.event.pull_request.head.label, 'denoland:'))
      && github.ref_name != 'deno_core'
      && !startsWith(github.ref, 'refs/tags/deno/')
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-2019]

    env:
      CARGO_INCREMENTAL: 0
      GH_ACTIONS: 1
      RUST_BACKTRACE: full
      RUSTFLAGS: -D warnings

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dsherret/rust-toolchain-file@v1

      - name: Install Deno
        uses: denoland/setup-deno@v1

      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Format
        if: contains(matrix.os, 'ubuntu')
        run: |
          cargo fmt -- --check
          deno fmt --check ./core/ ./ops/ ./serde_v8/

      - name: Lint
        if: contains(matrix.os, 'ubuntu')
        run: |
          cargo clippy --locked --release --all-features --all-targets -- -D clippy::all
          deno lint

      - name: Cargo test
        run: cargo test --locked --release --all-features --bins --tests --examples

      - name: Cargo publish
        if: |
          contains(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/deno_core' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish -p serde_v8 && cargo publish -p deno_ops && cargo publish -p deno_core

      - name: Get tag version
        if: contains(matrix.os, 'ubuntu') && startsWith(github.ref, 'refs/tags/')
        id: get_tag_version
        run: echo ::set-output name=TAG_VERSION::${GITHUB_REF/refs\/tags\//}

