name: CI

on:
  # Run on any push to main or any tag
  push:
    branches:
      - main
    tags:
      - \*
  # Run on any pull request
  pull_request:
    branches:
      - main

jobs:
  compute-jobs:
    runs-on: ubuntu-latest
    outputs:
      # If we're not running in the denoland repo, or we're building on a tag, use the 'nop' matrix
      # that runs a single, no-op job
      matrix: |
        ${{ (github.repository == 'denoland/deno_core' && !startsWith(github.ref, 'refs/tags/')) 
          && steps.read-jobs.outputs.matrix 
          || '[{ "label": "linux", "os": "ubuntu-latest", "job": "nop" }]' }}
      is_tag: ${{ github.repository == 'denoland/deno_core' && startsWith(github.ref, 'refs/tags/') }}
      is_main: ${{ github.repository == 'denoland/deno_core' && github.ref == 'refs/heads/main' }}
    steps:
      # https://github.com/marketplace/actions/query-yaml-config-as-outputs
      - name: Read job configuration
        uses: cloudposse/github-action-yaml-config-query@main
        id: read-jobs
        with:
          # Extract the jobs, then combine them with the os/uses line to build an array of 'includes' lines for the
          # matrix below
          # Test this using jq/yq: cat config.yaml | yq -o json | jq
          query: "{ matrix: [. | to_entries[] | . as $entry | .value.jobs[] | { label: $entry.key, os: $entry.value.os, job: . }] }"
          config: |-
            linux:
              os: ubuntu-latest
              jobs: [lint, lint-deps, test, test-miri, test-ops, test-publish]
            macos:
              os: macOS-latest
              jobs: [lint, test]
            windows:
              os: windows-2019
              jobs: [lint, test]

  top:
    name: build-${{ matrix.label }}
    needs: compute-jobs
    uses: ./.github/workflows/ci-job.yml
    with:
      label: ${{ matrix.label }}
      os: ${{ matrix.os }}
      job: ${{ matrix.job }}
      is_main: ${{ needs.compute-jobs.outputs.is_main == true }}
      is_tag: ${{ needs.compute-jobs.outputs.is_tag == true }}
    strategy:
      matrix:
        include: ${{ fromJSON(needs.compute-jobs.outputs.matrix) }}

  success:
    needs: top
    runs-on: ubuntu-latest
    steps:
      - name: Print success
        run: echo Success âœ…

  publish:
    name: publish
    needs:
      - top
      - compute-jobs
    if: needs.compute-jobs.outputs.is_tag
    uses: ./.github/workflows/ci-job.yml
    secrets: inherit
    with:
      label: linux
      os: ubuntu-latest
      job: publish
      is_main: ${{ needs.compute-jobs.outputs.is_main }}
      is_tag: ${{ needs.compute-jobs.outputs.is_tag }}
