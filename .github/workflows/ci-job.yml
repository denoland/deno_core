# Each sub-job is defined here. These jobs perform specific tasks such as linting, testing, or publishing
# based on the matrix parameters.
name: CI Job
on:
  workflow_call:
    inputs:
      # "linux"
      label:
        required: true
        type: string
      # "ubuntu-latest"
      os:
        required: true
        type: string
      # "lint"
      job:
        required: true
        type: string
      is_main:
        required: true
        type: boolean
      is_tag:
        required: true
        type: boolean

jobs:
  job:
    name: ${{ inputs.label }} ${{ inputs.job }}
    runs-on: ${{ inputs.os }}
    steps:
      - run: echo ${{ inputs.job }}

      # ************************************************************************************************
      #  BEGIN COMMON STEPS
      #  These steps are run for each and every sub-job, on a clean runner.
      # ************************************************************************************

      # TODO(mmastrac): these could be extracted to a `ci-common.yml`
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install ARM runner tools
        if: ${{ inputs.os == 'ubuntu-22.04-arm64' }}
        run: |
          # Installing packages
          sudo rm /var/lib/man-db/auto-update || true
          sudo apt update
          sudo apt-get install -y --no-install-recommends unzip clang

      - name: Install Rust
        uses: dsherret/rust-toolchain-file@v1

      - name: Install Deno
        uses: denoland/setup-deno@v1

      # https://github.com/marketplace/actions/rust-cache
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust"
          shared-key: "${{ inputs.label }}-${{ inputs.job }}"
          save-if: ${{ inputs.is_main }}

      - name: Clean
        if: inputs.is_main
        run: cargo clean

      # ************************************************************************************************
      #  END COMMON STEPS
      # ************************************************************************************************

      - name: No-op
        id: nop
        if: inputs.job == 'nop'
        uses: ./.github/workflows/ci-nop

      - name: Coverage
        id: coverage
        if: inputs.job == 'coverage'
        uses: ./.github/workflows/ci-coverage
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Lint
        id: lint
        if: inputs.job == 'lint'
        uses: ./.github/workflows/ci-lint

      - name: Lint (deps)
        id: lint-deps
        if: inputs.job == 'lint-deps'
        uses: ./.github/workflows/ci-lint-deps

      - name: Test
        id: test
        if: inputs.job == 'test'
        uses: ./.github/workflows/ci-test

      - name: Test (ops)
        id: test-ops
        if: inputs.job == 'test-ops'
        uses: ./.github/workflows/ci-test-ops

      - name: Test (miri)
        id: test-miri
        if: inputs.job == 'test-miri'
        uses: ./.github/workflows/ci-test-miri

      - name: Test (valgrind)
        id: test-valgrind
        if: inputs.job == 'test-valgrind'
        uses: ./.github/workflows/ci-test-valgrind

      - name: Publish (dry-run)
        id: test-publish
        if: inputs.job == 'test-publish'
        uses: ./.github/workflows/ci-test-publish

      - name: Publish
        id: publish
        if: inputs.job == 'publish'
        uses: ./.github/workflows/ci-publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

    env:
      CARGO_INCREMENTAL: 0
      GH_ACTIONS: 1
      RUST_BACKTRACE: full
      RUSTFLAGS: -D warnings
